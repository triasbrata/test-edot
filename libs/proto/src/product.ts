/* eslint-disable @typescript-eslint/no-namespace */
/**
 * This file is auto-generated by nestjs-proto-gen-ts
 */

import { Observable } from 'rxjs';
import { Metadata } from '@grpc/grpc-js';

export namespace product_proto {
  export interface ProductService {
    // API to retrieve a list of products along with their stock availability
    listProducts(
      data: ListProductsRequest,
      metadata?: Metadata,
      ...rest: any[]
    ): Observable<ListProductsResponse>;
  }
  export interface ListProductsRequest {
    // Optional filter by shop ID
    shopId?: number;
    // Optional search query
    searchQuery?: string;
    // Pagination fields
    pageNumber?: number;
    // Number of products per page
    pageSize?: number;
    // Sorting fields
    sortBy?: string;
    // Sort order (e.g., &quot;asc&quot; for ascending, &quot;desc&quot; for descending)
    sortOrder?: string;
  }
  export interface ListProductsResponse {
    // List of products returned by the API
    products?: ListProductsResponse.Product[];
    // Pagination metadata
    totalProducts?: number;
    // Total number of pages based on the page size
    totalPages?: number;
    // Current page number
    currentPage?: number;
  }
  export namespace ListProductsResponse {
    export interface Product {
      // Unique identifier for the product
      id?: number;
      // Name of the product
      name?: string;
      // Description of the product
      description?: string;
      // Price of the product in the smallest currency unit (e.g., cents)
      price?: number;
      // Available stock for the product
      stock?: number;
    }
  }
}
